<!DOCTYPE html>
<html lang="en">
<head>
  <title>QR Scanner</title>
  <script src="/js/html5-qrcode.min.js"></script>
  <style>
    #reader {
      width: 300px;
      margin: auto;
      border: 1px solid #ccc;
      padding: 10px;
    }
    #result {
      margin-top: 20px;
      font-size: 18px;
      text-align: center;
      color: green;
    }
  </style>
</head>
<body>
  <h1 style="text-align: center;">QR Scanner</h1>
  <div id="reader"></div>
  <div id="result">Waiting for QR code...</div>

  <script>
    console.log("Html5Qrcode initialized:", typeof Html5Qrcode);

    const qrCodeReader = new Html5Qrcode("reader");
    const resultDiv = document.getElementById("result");
    function validateAndRedirect(qrCodeMessage) {
      console.log("Scanned QR Code:", qrCodeMessage);
    
      // Ensure the QR code message is valid and not empty
      if (!qrCodeMessage || typeof qrCodeMessage !== "string") {
        resultDiv.textContent = "Invalid QR Code scanned.";
        resultDiv.style.color = "red";
        return;
      }
    
      // Redirect to the scanned URL
      resultDiv.textContent = "Redirecting to profile...";
      resultDiv.style.color = "green";
      window.location.href = qrCodeMessage;
    }
    
    // Start the QR scanner
    Html5Qrcode.getCameras()
      .then(devices => {
        if (devices && devices.length > 0) {
          // Look for the back camera
          const backCamera = devices.find(device =>
            device.label.toLowerCase().includes("back") || device.label.toLowerCase().includes("environment")
          );
          const cameraId = backCamera ? backCamera.id : devices[0].id; // Default to the first camera if back camera is not found

          console.log("Using camera:", backCamera ? backCamera.label : devices[0].label);

          qrCodeReader.start(
            cameraId,
            { fps: 10, qrbox: 250 },
            qrCodeMessage => {
              // Update result and validate the QR code message
              resultDiv.textContent = `Scanned QR Code: ${qrCodeMessage}`;
              resultDiv.style.color = "green";
              validateAndRedirect(qrCodeMessage);

              // Stop scanning after a successful read
              qrCodeReader.stop().catch(err => {
                console.error("Error stopping QR Code scanner:", err);
              });
            },
            errorMessage => {
              // Log scan errors
              console.error("QR Code Scan Error:", errorMessage);
              resultDiv.textContent = "Error scanning QR Code. Try again.";
              resultDiv.style.color = "red";
            }
          ).catch(err => {
            // Log and display errors during scanner initialization
            console.error("Unable to start QR Code Scanner:", err);
            resultDiv.textContent = "Error starting QR Code scanner.";
            resultDiv.style.color = "red";
          });
        } else {
          // No cameras found
          console.error("No cameras found on this device.");
          resultDiv.textContent = "No cameras found. Please check your device.";
          resultDiv.style.color = "red";
        }
      })
      .catch(err => {
        // Error accessing cameras
        console.error("Error accessing cameras:", err);
        resultDiv.textContent = "Unable to access camera.";
        resultDiv.style.color = "red";
      });
  </script>
</body>
</html>
